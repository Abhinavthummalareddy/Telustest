{
 "Resources": {
  "UserTableBD4BF69E": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "UserId",
      "AttributeType": "S"
     }
    ],
    "KeySchema": [
     {
      "AttributeName": "UserId",
      "KeyType": "HASH"
     }
    ],
    "ProvisionedThroughput": {
     "ReadCapacityUnits": 5,
     "WriteCapacityUnits": 5
    },
    "TableName": "UserTable"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "DeploymentStack/ServerlessStack/UserTable/Resource"
   }
  },
  "registerLambdaServiceRole9DE496C5": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "DeploymentStack/ServerlessStack/registerLambda/ServiceRole/Resource"
   }
  },
  "registerLambdaServiceRoleDefaultPolicyD21FA372": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "UserTableBD4BF69E",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "registerLambdaServiceRoleDefaultPolicyD21FA372",
    "Roles": [
     {
      "Ref": "registerLambdaServiceRole9DE496C5"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "DeploymentStack/ServerlessStack/registerLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "registerLambda2E88F6E1": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "6bff50d1f776fa3031c6d3580ef4932858c31fa2efab6bd2667fd3b11c9621bb.zip"
    },
    "Environment": {
     "Variables": {
      "TABLE_NAME": {
       "Ref": "UserTableBD4BF69E"
      }
     }
    },
    "FunctionName": "registerLambda",
    "Handler": "register.handler",
    "Role": {
     "Fn::GetAtt": [
      "registerLambdaServiceRole9DE496C5",
      "Arn"
     ]
    },
    "Runtime": "python3.11"
   },
   "DependsOn": [
    "registerLambdaServiceRoleDefaultPolicyD21FA372",
    "registerLambdaServiceRole9DE496C5"
   ],
   "Metadata": {
    "aws:cdk:path": "DeploymentStack/ServerlessStack/registerLambda/Resource",
    "aws:asset:path": "asset.6bff50d1f776fa3031c6d3580ef4932858c31fa2efab6bd2667fd3b11c9621bb",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "getUserInfoLambdaServiceRoleB46F9DF2": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "DeploymentStack/ServerlessStack/getUserInfoLambda/ServiceRole/Resource"
   }
  },
  "getUserInfoLambdaServiceRoleDefaultPolicyFB0FAD1F": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:Scan"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "UserTableBD4BF69E",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "getUserInfoLambdaServiceRoleDefaultPolicyFB0FAD1F",
    "Roles": [
     {
      "Ref": "getUserInfoLambdaServiceRoleB46F9DF2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "DeploymentStack/ServerlessStack/getUserInfoLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "getUserInfoLambda06CA79D9": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "6bff50d1f776fa3031c6d3580ef4932858c31fa2efab6bd2667fd3b11c9621bb.zip"
    },
    "Environment": {
     "Variables": {
      "TABLE_NAME": {
       "Ref": "UserTableBD4BF69E"
      }
     }
    },
    "Handler": "getInfo.handler",
    "Role": {
     "Fn::GetAtt": [
      "getUserInfoLambdaServiceRoleB46F9DF2",
      "Arn"
     ]
    },
    "Runtime": "python3.11"
   },
   "DependsOn": [
    "getUserInfoLambdaServiceRoleDefaultPolicyFB0FAD1F",
    "getUserInfoLambdaServiceRoleB46F9DF2"
   ],
   "Metadata": {
    "aws:cdk:path": "DeploymentStack/ServerlessStack/getUserInfoLambda/Resource",
    "aws:asset:path": "asset.6bff50d1f776fa3031c6d3580ef4932858c31fa2efab6bd2667fd3b11c9621bb",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "registerAPI535FD39A": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "Description": "Api for Registering User",
    "Name": "Register User"
   },
   "Metadata": {
    "aws:cdk:path": "DeploymentStack/ServerlessStack/registerAPI/Resource"
   }
  },
  "registerAPIDeployment7ADE09159699fba3bb2a4bb78af2f1d20bec703d": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "Description": "Api for Registering User",
    "RestApiId": {
     "Ref": "registerAPI535FD39A"
    }
   },
   "DependsOn": [
    "registerAPIregisterPOST20128898",
    "registerAPIregisterD3C91D09"
   ],
   "Metadata": {
    "aws:cdk:path": "DeploymentStack/ServerlessStack/registerAPI/Deployment/Resource"
   }
  },
  "registerAPIDeploymentStageprodE010B84E": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "DeploymentId": {
     "Ref": "registerAPIDeployment7ADE09159699fba3bb2a4bb78af2f1d20bec703d"
    },
    "RestApiId": {
     "Ref": "registerAPI535FD39A"
    },
    "StageName": "prod"
   },
   "Metadata": {
    "aws:cdk:path": "DeploymentStack/ServerlessStack/registerAPI/DeploymentStage.prod/Resource"
   }
  },
  "registerAPIregisterD3C91D09": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "registerAPI535FD39A",
      "RootResourceId"
     ]
    },
    "PathPart": "register",
    "RestApiId": {
     "Ref": "registerAPI535FD39A"
    }
   },
   "Metadata": {
    "aws:cdk:path": "DeploymentStack/ServerlessStack/registerAPI/Default/register/Resource"
   }
  },
  "registerAPIregisterPOSTApiPermissionDeploymentStackServerlessStackregisterAPI09182AE8POSTregister7E351A5D": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "registerLambda2E88F6E1",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "registerAPI535FD39A"
       },
       "/",
       {
        "Ref": "registerAPIDeploymentStageprodE010B84E"
       },
       "/POST/register"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "DeploymentStack/ServerlessStack/registerAPI/Default/register/POST/ApiPermission.DeploymentStackServerlessStackregisterAPI09182AE8.POST..register"
   }
  },
  "registerAPIregisterPOSTApiPermissionTestDeploymentStackServerlessStackregisterAPI09182AE8POSTregisterAD3B12A9": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "registerLambda2E88F6E1",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "registerAPI535FD39A"
       },
       "/test-invoke-stage/POST/register"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "DeploymentStack/ServerlessStack/registerAPI/Default/register/POST/ApiPermission.Test.DeploymentStackServerlessStackregisterAPI09182AE8.POST..register"
   }
  },
  "registerAPIregisterPOST20128898": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "registerLambda2E88F6E1",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "registerAPIregisterD3C91D09"
    },
    "RestApiId": {
     "Ref": "registerAPI535FD39A"
    }
   },
   "Metadata": {
    "aws:cdk:path": "DeploymentStack/ServerlessStack/registerAPI/Default/register/POST/Resource"
   }
  },
  "getInfoAPICD7244C6": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "Description": "API for getting users info based on userId",
    "Name": "Get User Info"
   },
   "Metadata": {
    "aws:cdk:path": "DeploymentStack/ServerlessStack/getInfoAPI/Resource"
   }
  },
  "getInfoAPIDeployment9C6AC8C37f58d0c4930f59073a1fa782d3449fe5": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "Description": "API for getting users info based on userId",
    "RestApiId": {
     "Ref": "getInfoAPICD7244C6"
    }
   },
   "DependsOn": [
    "getInfoAPIusersuserIdGET472B0DFB",
    "getInfoAPIusersuserIdFFBE216A",
    "getInfoAPIusers48B5A93C"
   ],
   "Metadata": {
    "aws:cdk:path": "DeploymentStack/ServerlessStack/getInfoAPI/Deployment/Resource"
   }
  },
  "getInfoAPIDeploymentStageprod5BAAC7C2": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "DeploymentId": {
     "Ref": "getInfoAPIDeployment9C6AC8C37f58d0c4930f59073a1fa782d3449fe5"
    },
    "RestApiId": {
     "Ref": "getInfoAPICD7244C6"
    },
    "StageName": "prod"
   },
   "Metadata": {
    "aws:cdk:path": "DeploymentStack/ServerlessStack/getInfoAPI/DeploymentStage.prod/Resource"
   }
  },
  "getInfoAPIusers48B5A93C": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "getInfoAPICD7244C6",
      "RootResourceId"
     ]
    },
    "PathPart": "users",
    "RestApiId": {
     "Ref": "getInfoAPICD7244C6"
    }
   },
   "Metadata": {
    "aws:cdk:path": "DeploymentStack/ServerlessStack/getInfoAPI/Default/users/Resource"
   }
  },
  "getInfoAPIusersuserIdFFBE216A": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "getInfoAPIusers48B5A93C"
    },
    "PathPart": "{userId}",
    "RestApiId": {
     "Ref": "getInfoAPICD7244C6"
    }
   },
   "Metadata": {
    "aws:cdk:path": "DeploymentStack/ServerlessStack/getInfoAPI/Default/users/{userId}/Resource"
   }
  },
  "getInfoAPIusersuserIdGETApiPermissionDeploymentStackServerlessStackgetInfoAPID2BBC269GETusersuserId0B8F9AA3": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "getUserInfoLambda06CA79D9",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "getInfoAPICD7244C6"
       },
       "/",
       {
        "Ref": "getInfoAPIDeploymentStageprod5BAAC7C2"
       },
       "/GET/users/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "DeploymentStack/ServerlessStack/getInfoAPI/Default/users/{userId}/GET/ApiPermission.DeploymentStackServerlessStackgetInfoAPID2BBC269.GET..users.{userId}"
   }
  },
  "getInfoAPIusersuserIdGETApiPermissionTestDeploymentStackServerlessStackgetInfoAPID2BBC269GETusersuserIdB4520062": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "getUserInfoLambda06CA79D9",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "getInfoAPICD7244C6"
       },
       "/test-invoke-stage/GET/users/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "DeploymentStack/ServerlessStack/getInfoAPI/Default/users/{userId}/GET/ApiPermission.Test.DeploymentStackServerlessStackgetInfoAPID2BBC269.GET..users.{userId}"
   }
  },
  "getInfoAPIusersuserIdGET472B0DFB": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "getUserInfoLambda06CA79D9",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "getInfoAPIusersuserIdFFBE216A"
    },
    "RestApiId": {
     "Ref": "getInfoAPICD7244C6"
    }
   },
   "Metadata": {
    "aws:cdk:path": "DeploymentStack/ServerlessStack/getInfoAPI/Default/users/{userId}/GET/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/1WP0W6DMAxFv6XvqVfKfqBl2lu1iu69MsRlLpAgbIZQxL9PhE7rnu6xfX0T7yF5TWC3wVG2pa23DRcQLoplbXCUa7CTw9bbAsInFg2Z7OYizKbBtrAI4X1wpbJ3y+iZz9S3LMLezYaxhZD7dT/q2TdcTtEXaTaSXlGEVOCwiJEUjkNZkx5RyGDHFSqNOEHISfTQccx64Bt1jZ9acrp0n6qLYhVfXSEn8UNfUsz8LR5BK59Iv7xdWivN858vfmwJYlctjo9Bu0H/rWc3l3lnWePdzluCu7x873eQpJBs7sK87Qen3BLkq/4A8gVH34MBAAA="
   },
   "Metadata": {
    "aws:cdk:path": "DeploymentStack/ServerlessStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Outputs": {
  "registerAPIEndpointD56655FD": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "registerAPI535FD39A"
      },
      ".execute-api.",
      {
       "Ref": "AWS::Region"
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "registerAPIDeploymentStageprodE010B84E"
      },
      "/"
     ]
    ]
   }
  },
  "getInfoAPIEndpointA5AB9B46": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "getInfoAPICD7244C6"
      },
      ".execute-api.",
      {
       "Ref": "AWS::Region"
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "getInfoAPIDeploymentStageprod5BAAC7C2"
      },
      "/"
     ]
    ]
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "il-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}